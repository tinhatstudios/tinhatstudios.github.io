import{c as L,e as O,__tla as S}from"./index-BaBBevpJ.js";let m,W=Promise.all([(()=>{try{return S}catch{}})()]).then(async()=>{const{WritableStream:l,TransformStream:h,DOMException:u,Blob:d}=L,{GONE:g}=O,w=/constructor/i.test(window.HTMLElement);m=class{constructor(r="unkown"){this.name=r,this.kind="file"}async getFile(){throw new u(...g)}async isSameEntry(r){return this===r}async createWritable(r={}){const e=await navigator.serviceWorker?.getRegistration(),t=document.createElement("a"),o=new h,T=o.writable;if(t.download=this.name,w||!e){let a=[];o.readable.pipeTo(new l({write(s){a.push(new d([s]))},close(){const s=new d(a,{type:"application/octet-stream; charset=utf-8"});a=[],t.href=URL.createObjectURL(s),t.click(),setTimeout(()=>URL.revokeObjectURL(t.href),1e4)}}))}else{const{writable:a,readablePort:s}=new E(l),n=encodeURIComponent(this.name).replace(/['()]/g,escape).replace(/\*/g,"%2A"),U={"content-disposition":"attachment; filename*=UTF-8''"+n,"content-type":"application/octet-stream; charset=utf-8",...r.size?{"content-length":r.size}:{}},j=setTimeout(()=>e.active.postMessage(0),1e4);o.readable.pipeThrough(new h({transform(c,p){if(c instanceof Uint8Array)return p.enqueue(c);const k=new Response(c).body.getReader(),_=A=>k.read().then(y=>y.done?0:_(p.enqueue(y.value)));return _()}})).pipeTo(a).finally(()=>{clearInterval(j)}),e.active.postMessage({url:e.scope+n,headers:U,readablePort:s},[s]);const i=document.createElement("iframe");i.hidden=!0,i.src=e.scope+n,document.body.appendChild(i)}return T.getWriter()}};const R=0,b=0,f=1,P=1,v=2;class M{constructor(e){e.onmessage=t=>this._onMessage(t.data),this._port=e,this._resetReady()}start(e){return this._controller=e,this._readyPromise}write(e){const t={type:R,chunk:e};return this._port.postMessage(t,[e.buffer]),this._resetReady(),this._readyPromise}close(){this._port.postMessage({type:v}),this._port.close()}abort(e){this._port.postMessage({type:P,reason:e}),this._port.close()}_onMessage(e){e.type===b&&this._resolveReady(),e.type===f&&this._onError(e.reason)}_onError(e){this._controller.error(e),this._rejectReady(e),this._port.close()}_resetReady(){this._readyPromise=new Promise((e,t)=>{this._readyResolve=e,this._readyReject=t}),this._readyPending=!0}_resolveReady(){this._readyResolve(),this._readyPending=!1}_rejectReady(e){this._readyPending||this._resetReady(),this._readyPromise.catch(()=>{}),this._readyReject(e),this._readyPending=!1}}class E{constructor(e){const t=new MessageChannel;this.readablePort=t.port1,this.writable=new e(new M(t.port2))}}});export{m as FileHandle,W as __tla};
